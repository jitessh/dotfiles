# prefix key
# ---------------------------------
unbind C-b
set -g prefix C-a
bind C-a send-prefix
bind-key C-a send-prefix


# settings
# ---------------------------------
# general
setw -g xterm-keys on                       # enable xterm-keys
set -sg escape-time 0                       # don't wait for escape sequences
set -sg repeat-time 700                     # allow multiple commands to be entered without pressing the prefix-key again
set -g default-terminal "screen-256color"   # use 256 colors
set -g history-limit 65536                  # increase scrollback lines
set -g mouse on                             # mouse support

# windows
set -g base-index 1                         # start window numbers at 1
set -g renumber-windows on                  # renumber windows sequentially after closing any of them
setw -g automatic-rename on                 # rename window to reflect current program
setw -g monitor-activity on                 # monitor windows for activity
setw -g aggressive-resize on                # size windows based on clients looking at that window

# panes
setw -g pane-base-index 1                   # start pane numbers at 1
setw -g pane-border-lines heavy             # thicc pane borders


# key bindings
# ---------------------------------
# vi mode
setw -g mode-keys vi

# reload tmux
bind r source-file -q "~/.config/tmux/tmux.conf" \; display-message "Tmux reloaded"

# session
bind C-c new-session                        # new session

# window navigation
unbind n
unbind p
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
bind tab last-window                        # switch to last window

# swap windows
bind-key -n C-S-Left swap-window -t -1 \; select-window -t -1
bind-key -n C-S-Right swap-window -t +1 \; select-window -t +1

# create new windows/panes in same directory
bind c      new-window    -c "#{pane_current_path}" # window
bind "\"" split-window    -c "#{pane_current_path}" # h-split
bind -    split-window    -c "#{pane_current_path}" # h-split
bind %    split-window -h -c "#{pane_current_path}" # v-split
bind |    split-window -h -c "#{pane_current_path}" # v-split

# pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# swap panes
bind > swap-pane -D
bind < swap-pane -U

# enable/disable keyboard input for active pane
bind C-d select-pane -d \; display-message "Input disabled"
bind C-e select-pane -e \; display-message "Input enabled"

# <Prefix>-! breaks current pane into separate window
# join a pane/window from the current session into the current window
bind @ command-prompt -p "Merge pane from:" "join-pane -h -s ':%%'"

# yank like vim
bind Enter copy-mode                                        # copy mode
bind -T copy-mode-vi v send -X begin-selection              # visual mode
bind -T copy-mode-vi C-v send -X rectangle-toggle           # visual block mode
bind -T copy-mode-vi y send -X copy-selection-and-cancel    # yank selected
bind b list-buffers                                         # list paste buffers
bind p paste-buffer                                         # paste from top of the paste buffer
bind P choose-buffer                                        # show tmux clipboard

# more vi bindings
bind -T copy-mode-vi H send -X start-of-line                # 0
bind -T copy-mode-vi L send -X end-of-line                  # $
bind -T copy-mode-vi d send -X halfpage-down                # C-d
bind -T copy-mode-vi u send -X halfpage-up                  # C-u

# toggles
bind-key m set-option -g mouse \; display "Mouse: #{?mouse,on,off}"                                         # toggle mouse
bind-key v set-option -g status \; display "Status line: #{status}"                                         # toggle status line
bind-key n set-option -g synchronize-panes \; display "Pane synchronization: #{?synchronize-panes,on,off}"  # toggle pane synchronization


# vim-tmux-navigator
# ---------------------------------
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# status line
# ---------------------------------
set -g status-interval 1
source-file -q "~/.config/tmux/statusline.conf"


# tmux resurrect
# ---------------------------------
# clone tmux-resurrect if it does not exist
run-shell -b {
    [ ! -d "~/.config/tmux/tmux-resurrect" ] && \
        git clone -q --depth 1 https://github.com/tmux-plugins/tmux-resurrect ~/.config/tmux/tmux-resurrect && \
        tmux display -d 2000 "Reload tmux to use tmux-resurrect"
    true # to avoid exit status on tmux pane
}

# load tmux-resurrect if it exist
if-shell "[ -f ~/.config/tmux/tmux-resurrect/resurrect.tmux ]" {
    run-shell "~/.config/tmux/tmux-resurrect/resurrect.tmux"

    set -g @resurrect-dir "~/.config/tmux/resurrect"
    set -g @resurrect-capture-pane-contents 'on'

    # https://github.com/tmux-plugins/tmux-resurrect/issues/98
    # default-command should not contain && and || operators,
    # if you face this bug, simply uncomment the below line:
    # set -g default-command "reattach-to-user-namespace -l $SHELL"
}


# local customizations
# ---------------------------------
source-file -q "~/.config/tmux/tmux_local.conf"
