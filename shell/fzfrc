#!/bin/sh
# fzfrc - some cool fzf functions

# don't source this file if fzf is not installed
command -v fzf >/dev/null 2>&1 || return 0

alias btrfzf="fzf -0 --height=45% --reverse"
alias clipbd="xclip -r -selection clipboard"
alias devar="unset var"

# cf [cd fuzzy]: cd from $HOME
cf() {
    [ -n "$1" ] && cd "$1" 2>/dev/null && return 0
    if command -v fd >/dev/null; then
        var="$(fd -d5 -td --follow --search-path ~ 2>/dev/null | btrfzf --prompt="cd ")"
    else
        var="$(find -L "$HOME" -maxdepth 5 -type d -not -path '*/\.*' 2>/dev/null | btrfzf --prompt="cd ")"
    fi
    [ -n "$var" ] && cd "$var" 2>/dev/null
    devar; return 0
}

# ch [cd hidden/here]: cd from current dir including hidden
ch() {
    [ -n "$1" ] && cd "$1" 2>/dev/null && return 0
    if command -v fd >/dev/null; then
        var="$(fd -d5 -td --follow --hidden --exclude '\.git*' 2>/dev/null | btrfzf --prompt="cd ")"
    else
        var="$(find -L . -maxdepth 5 -type d -not -path '*/\.git*' 2>/dev/null | btrfzf --prompt="cd ")"
    fi
    [ -n "$var" ] && cd "$var" 2>/dev/null
    devar; return 0
}

# vif [vi fuzzy]: open a file in $EDITOR
vif() {
    [ -n "$1" ] && "$EDITOR" "$1" && return 0
    var="$(btrfzf --prompt="edit ")"
    [ -n "$var" ] && "$EDITOR" "$var"
    devar; return 0
}

# pdf [pdfuzzy]: open pdf/epub in zathura
if command -v zathura >/dev/null; then
pdf() {
    alias pdfzf='btrfzf --bind "enter:execute|zathura {} 2>/dev/null &|,enter:+print-query" --prompt="zathura " >/dev/null'
    if command -v fd >/dev/null; then
        var="$(fd -e pdf -e epub 2>/dev/null | pdfzf)"
    else
        var="$(find . -type f -name "*.pdf" -o -name "*.epub" 2>/dev/null | pdfzf)"
    fi
    devar; unalias pdfzf; return 0
}
fi

# fox [fuzzy xdg-open]: open any file with xdg-open
fox() {
    btrfzf --bind "enter:execute|xdg-open {} 2>/dev/null &|,enter:+print-query" --prompt="xdg-open " >/dev/null
    return 0
}

# hst [history]: search command line history & copy selected
hst() {
    var="$(history | cut -c8- | btrfzf --multi --tac --prompt="history ")"
    [ -n "$var" ] && echo "$var" | clipbd
    devar; return 0
}

# i use arch btw
if [ -f "/etc/arch-release" ]; then
# pacls [pacman list]: list all installed packages
pacls() {
    var="$(pacman -Qq | btrfzf --height=100% --multi --preview "pacman -Si {1}" --prompt="pkg ")"
    [ -n "$var" ] && echo "$var" | clipbd
    devar; return 0
}

# pacfd [pacman find]: find a package
pacfd() {
    var="$(pacman -Slq | btrfzf --height=100% --multi --preview "pacman -Si {1}" --prompt="pkg ")"
    [ -n "$var" ] && echo "$var" | clipbd
    devar; return 0
}

# yayls [yay list]: list all installed AUR packages
yayls() {
    var="$(yay -Qmq | btrfzf --height=100% --multi --preview "yay -Si {1}" --prompt="pkg ")"
    [ -n "$var" ] && echo "$var" | clipbd
    devar; return 0
}

# yayfd [yay find]: find an AUR package
yayfd() {
    var="$(yay -Slaq | btrfzf --height=100% --multi --preview "yay -Si {1}" --prompt="pkg ")"
    [ -n "$var" ] && echo "$var" | clipbd
    devar; return 0
}
fi
